# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Build channels
        run: |
          npm install
          node release-channels.js
      - name: Release app
        run: |
          version=$(date +"%Y%m%dT%H%M") 
          echo "export const version='${version}'">app/version.mjs       
          npm run release
          cp -a dist/ app/
      - name: Ship busola
        run: |
          container_id=$(docker create europe-docker.pkg.dev/kyma-project/prod/busola:latest)
          docker cp $container_id:/app/core-ui ./busola
          cp ./app/kyma.html ./busola/
          tar -zcvf app/busola.tar.gz busola
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: 'app'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
